# worker_processes 4;

# events { worker_connections 1024; }

# http {
    

#     server {

#         listen 8000;
#         charset utf-8;

#           location /user {
#     rewrite ^/user/(.*)$ /$1 break;
#     proxy_pass http://user:4000;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;
# }
#    location /vendor {
#     rewrite ^/vendor/(.*)$ /$1 break;
#     proxy_pass http://vendor:5000;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;
# }
   

 

    

#     }
# }
worker_processes 4;

events {
    worker_connections 1024;
}

http {
    # Define upstream block for services
    upstream backend {
        server user:4000 max_fails=3 fail_timeout=30s;
        server vendor:5000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        charset utf-8;

        # Use the upstream block for proxy_pass
        location /user {
            rewrite ^/user/(.*)$ /$1 break;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /vendor {
            rewrite ^/vendor/(.*)$ /$1 break;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}

